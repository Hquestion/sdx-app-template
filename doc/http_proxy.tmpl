upstream webflask2 {
    server 127.0.0.1:80;
}

upstream skymanger {
    server 127.0.0.1:81;
}


{{range getvs "/proxy_services/http/*"}}
    {{$data := json .}}
    server {
        {{if $data.server_name}}
            server_name {{$data.server_name}};
        {{end}}

        {{if $data.use_https}}
            ssl on;
            ssl_certificate     {{$data.ssl_certificate}};
            ssl_certificate_key {{$data.ssl_certificate_key}};
            listen {{$data.port}} ssl;
        {{else}}
            listen {{$data.port}};
        {{end}}

        location ~ ^/skydiscovery/static/(.*)$ {
            proxy_pass http://webflask2;
        }

        location ~ ^/model/(.*)$ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';


            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass       {{$data.backend}};
            proxy_pass_header X-XSRF-TOKEN;
        }

        location = /do-login {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-USER {{$data.backend}};
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://webflask2/login;
        }

        location = /v2/auth/login {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-USER {{$data.backend}};
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://webflask2/v2/auth/proxy/login;
        }

        location  / {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            proxy_http_version 1.1;
            proxy_connect_timeout 300s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass       {{$data.backend}};
            proxy_pass_header X-XSRF-TOKEN;
        }

        location = /proxy_auth {
            internal;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            set $args "task_id={{$data.task_id}}";
            proxy_pass  http://webflask2/v2/auth/proxy?$args;
        }

        location @proxy_auth_login {
            return 302 /do-login#login;
        }
    }
{{end}}

